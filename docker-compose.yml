version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - network
    volumes:
      - pgdata:/var/lib/postgresql/data

  paymentapi:
    build:
      context: ./paymentapi
      dockerfile: Dockerfile
    container_name: paymentapi
    depends_on:
      - postgres
    networks:
      - network
    ports:
      - 7000:7000
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: broker:29092
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: broker:29092

  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - network
    ports:
      - 2181:2181
    container_name: zookeeper

  broker:
    image: wurstmeister/kafka
    container_name: broker
    networks:
      - network
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"  # External access
      - "29092:29092" # Internal Docker access
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CREATE_TOPIC: "topic-event-1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - broker
    networks:
      - network
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "broker:29092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  consumerapp:
    container_name: consumerapp
    build:
      context: ./consumerapp
      dockerfile: Dockerfile
    networks:
      - network
    ports:
      - 7001:7001
    environment:
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: broker:29092
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: broker:29092

networks:
  network:

volumes:
  pgdata:
